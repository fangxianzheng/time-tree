{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fangxianzheng/工作/time-tree/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fangxianzheng/工作/time-tree/App.vue","mtime":1588602245706},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQaWNrZXIgZnJvbSAndmFudC9saWIvcGlja2VyJwppbXBvcnQgJ3ZhbnQvbGliL3BpY2tlci9zdHlsZScKaW1wb3J0IFRpbWVUcmVlIGZyb20gJy4vdGltZS10cmVlJwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgJ3Zhbi1waWNrZXInOiBQaWNrZXIKICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgY29sdW1uczogW10sCiAgICAgIGFyckRheXM6IHt9LAogICAgICBjb2wxOiBbXSwKICAgICAgY29sMjogW10sCiAgICAgIGNvbDM6IFtdCiAgICB9CiAgfSwKICBiZWZvcmVNb3VudCAoKSB7CgogICAgbGV0IHRpbWUgPSBuZXcgVGltZVRyZWUoewogICAgICBzdGFydERhdGU6ICcyMDIwLTA1LTA0IDA4OjM2JywKICAgICAgZW5kRGF0ZTogJzIwMjAtMDUtMTkgMjA6NDYnLAogICAgICBzcGFuOiAxMAogICAgfSkKCiAgICBsZXQgbWludXRlQXJyID0gdGltZS5nZXRNaW51dGVBcnIoKQogICAgbGV0IGFyckRheXMgPSB7fQogICAgZm9yIChsZXQgeWVhciBpbiBtaW51dGVBcnIpIHsKICAgICAgZm9yIChsZXQgbW9udGggaW4gbWludXRlQXJyW3llYXJdKSB7CiAgICAgICAgZm9yIChsZXQgZGF5IGluIG1pbnV0ZUFyclt5ZWFyXVttb250aF0pIHsKICAgICAgICAgIGFyckRheXNbYCR7eWVhcn0vJHttb250aH0vJHtkYXl9YF0gPSBtaW51dGVBcnJbeWVhcl1bbW9udGhdW2RheV0KICAgICAgICB9CiAgICAgIH0KICAgIH0KICAgIGNvbnNvbGUubG9nKGFyckRheXMpCiAgICB0aGlzLmFyckRheXMgPSBhcnJEYXlzCgogICAgbGV0IGNvbDEgPSBbXQogICAgbGV0IGNvbDIgPSBbXQogICAgbGV0IGNvbDMgPSBbXQogICAgbGV0IG9iaiA9IHsKICAgICAgMDogJ+WRqOaXpScsCiAgICAgIDE6ICflkajkuIAnLAogICAgICAyOiAn5ZGo5LqMJywKICAgICAgMzogJ+WRqOS4iScsCiAgICAgIDQ6ICflkajlm5snLAogICAgICA1OiAn5ZGo5LqUJywKICAgICAgNjogJ+WRqOWFrScsCiAgICB9CiAgICBsZXQgZGF5cyA9IE9iamVjdC5rZXlzKGFyckRheXMpCiAgICBkYXlzLmZvckVhY2goZGF5ID0+IHsKICAgICAgbGV0IGFyciA9IGRheS5zcGxpdCgnLycpCiAgICAgIGxldCBkYXRlT2JqID0gbmV3IERhdGUoZGF5KQogICAgICBsZXQgd2VlayA9IGRhdGVPYmouZ2V0RGF5KCkKICAgICAgbGV0IHdlZWtaaCA9IG9ialt3ZWVrXQogICAgICBsZXQgbW9udGggPSBwYXJzZUludChhcnJbMV0pIDwgMTAgPyAnMCcgKyBhcnJbMV0gOiBhcnJbMV0KICAgICAgbGV0IGRheXggPSBwYXJzZUludChhcnJbMl0pIDwgMTAgPyAnMCcgKyBhcnJbMl0gOiBhcnJbMl0KICAgICAgbGV0IHRleHQgPSBgJHttb250aH3mnIgke2RheXh95pelICR7d2Vla1pofWAKICAgICAgY29sMS5wdXNoKHsKICAgICAgICB2YWx1ZTogZGF5LAogICAgICAgIHRleHQKICAgICAgfSkKICAgIH0pCgogICAgbGV0IGhvdXIgPSBPYmplY3Qua2V5cyhhcnJEYXlzW2RheXNbMF1dKQoKICAgIGhvdXIuZm9yRWFjaChjZWxsID0+IHsKICAgICAgbGV0IHRleHQgPSBwYXJzZUludChjZWxsKSA8IDEwID8gJzAnICsgY2VsbCA6IGNlbGwKICAgICAgY29sMi5wdXNoKHsKICAgICAgICB2YWx1ZTogcGFyc2VJbnQoY2VsbCksCiAgICAgICAgdGV4dAogICAgICB9KQogICAgfSkKICAgIAoKICAgIGxldCBtaW51dGUgPSBhcnJEYXlzW2RheXNbMF1dW2hvdXJbMF1dCiAgICBtaW51dGUuZm9yRWFjaChjZWxsID0+IHsKICAgICAgbGV0IHRleHQgPSBwYXJzZUludChjZWxsKSA8IDEwID8gJzAnICsgY2VsbCA6IGNlbGwKICAgICAgY29sMy5wdXNoKHsKICAgICAgICB2YWx1ZTogcGFyc2VJbnQoY2VsbCksCiAgICAgICAgdGV4dAogICAgICB9KQogICAgfSkKCiAgICB0aGlzLmNvbDEgPSBjb2wxCiAgICB0aGlzLmNvbDIgPSBjb2wyCiAgICB0aGlzLmNvbDMgPSBjb2wzCgogICAgdGhpcy5jb2x1bW5zID0gW3t2YWx1ZXM6IGNvbDF9LCB7dmFsdWVzOiBjb2wyfSwge3ZhbHVlczogY29sM31dCiAgfSwKICBtZXRob2RzOiB7CiAgICBvbkNoYW5nZSAocGlja2VyLCB2YWx1ZXMsIGluZGV4KSB7CgogICAgICBpZiAoaW5kZXggPT0gMCkgewogICAgICAgIGxldCBjb2x1bW4yID0gdGhpcy5nZXRDb2x1bW4yKHZhbHVlcykKICAgICAgICBwaWNrZXIuc2V0Q29sdW1uVmFsdWVzKDEsIGNvbHVtbjIpCiAgICAgIH0KICAgICAgaWYgKGluZGV4ID09IDEpIHsKICAgICAgICBsZXQgY29sdW1uMyA9IHRoaXMuZ2V0Q29sdW1uMyh2YWx1ZXMpCiAgICAgICAgcGlja2VyLnNldENvbHVtblZhbHVlcygyLCBjb2x1bW4zKQogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKGluZGV4KQogICAgfSwKICAgIGdldENvbHVtbjIgKHZhbHVlcykgewogICAgICBsZXQgZGF5ID0gdmFsdWVzWzBdLnZhbHVlCiAgICAgIGxldCBob3VyQXJyID0gT2JqZWN0LmtleXModGhpcy5hcnJEYXlzW2RheV0pCiAgICAgIGxldCBjb2wyID0gW10KICAgICAgaG91ckFyci5mb3JFYWNoKGNlbGwgPT4gewogICAgICAgIGxldCB0ZXh0ID0gcGFyc2VJbnQoY2VsbCkgPCAxMCA/ICcwJyArIGNlbGwgOiBjZWxsCiAgICAgICAgY29sMi5wdXNoKHsKICAgICAgICAgIHZhbHVlOiBwYXJzZUludChjZWxsKSwKICAgICAgICAgIHRleHQ6IGAke3RleHR95pe2YAogICAgICAgIH0pCiAgICAgIH0pCiAgICAgIHJldHVybiBjb2wyCiAgICB9LAogICAgZ2V0Q29sdW1uMyAodmFsdWVzKSB7CiAgICAgIGxldCBkYXkgPSB2YWx1ZXNbMF0udmFsdWUKICAgICAgbGV0IGhvdXIgPSB2YWx1ZXNbMV0udmFsdWUKICAgICAgbGV0IGNvbDMgPSBbXQogICAgICBsZXQgbWludXRlQXJyID0gdGhpcy5hcnJEYXlzW2RheV1baG91cl0KICAgICAgbWludXRlQXJyLmZvckVhY2goY2VsbCA9PiB7CiAgICAgICAgbGV0IHRleHQgPSBwYXJzZUludChjZWxsKSA8IDEwID8gJzAnICsgY2VsbCA6IGNlbGwKICAgICAgICBjb2wzLnB1c2goewogICAgICAgICAgdmFsdWU6IHBhcnNlSW50KGNlbGwpLAogICAgICAgICAgdGV4dAogICAgICAgIH0pCiAgICAgIH0pCiAgICAgIHJldHVybiBjb2wzCiAgICB9CiAgfQp9CgoKCgoKCgoKCg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":".","sourcesContent":["<template>\n  <div>\n    <van-picker :columns=\"columns\" @change=\"onChange\"> </van-picker>\n  </div>\n</template>\n\n<script>\n  import Picker from 'vant/lib/picker'\n  import 'vant/lib/picker/style'\n  import TimeTree from './time-tree'\n  export default {\n    components: {\n      'van-picker': Picker\n    },\n    data () {\n      return {\n        columns: [],\n        arrDays: {},\n        col1: [],\n        col2: [],\n        col3: []\n      }\n    },\n    beforeMount () {\n\n      let time = new TimeTree({\n        startDate: '2020-05-04 08:36',\n        endDate: '2020-05-19 20:46',\n        span: 10\n      })\n\n      let minuteArr = time.getMinuteArr()\n      let arrDays = {}\n      for (let year in minuteArr) {\n        for (let month in minuteArr[year]) {\n          for (let day in minuteArr[year][month]) {\n            arrDays[`${year}/${month}/${day}`] = minuteArr[year][month][day]\n          }\n        }\n      }\n      console.log(arrDays)\n      this.arrDays = arrDays\n\n      let col1 = []\n      let col2 = []\n      let col3 = []\n      let obj = {\n        0: '周日',\n        1: '周一',\n        2: '周二',\n        3: '周三',\n        4: '周四',\n        5: '周五',\n        6: '周六',\n      }\n      let days = Object.keys(arrDays)\n      days.forEach(day => {\n        let arr = day.split('/')\n        let dateObj = new Date(day)\n        let week = dateObj.getDay()\n        let weekZh = obj[week]\n        let month = parseInt(arr[1]) < 10 ? '0' + arr[1] : arr[1]\n        let dayx = parseInt(arr[2]) < 10 ? '0' + arr[2] : arr[2]\n        let text = `${month}月${dayx}日 ${weekZh}`\n        col1.push({\n          value: day,\n          text\n        })\n      })\n\n      let hour = Object.keys(arrDays[days[0]])\n\n      hour.forEach(cell => {\n        let text = parseInt(cell) < 10 ? '0' + cell : cell\n        col2.push({\n          value: parseInt(cell),\n          text\n        })\n      })\n      \n\n      let minute = arrDays[days[0]][hour[0]]\n      minute.forEach(cell => {\n        let text = parseInt(cell) < 10 ? '0' + cell : cell\n        col3.push({\n          value: parseInt(cell),\n          text\n        })\n      })\n\n      this.col1 = col1\n      this.col2 = col2\n      this.col3 = col3\n\n      this.columns = [{values: col1}, {values: col2}, {values: col3}]\n    },\n    methods: {\n      onChange (picker, values, index) {\n\n        if (index == 0) {\n          let column2 = this.getColumn2(values)\n          picker.setColumnValues(1, column2)\n        }\n        if (index == 1) {\n          let column3 = this.getColumn3(values)\n          picker.setColumnValues(2, column3)\n        }\n        console.log(index)\n      },\n      getColumn2 (values) {\n        let day = values[0].value\n        let hourArr = Object.keys(this.arrDays[day])\n        let col2 = []\n        hourArr.forEach(cell => {\n          let text = parseInt(cell) < 10 ? '0' + cell : cell\n          col2.push({\n            value: parseInt(cell),\n            text: `${text}时`\n          })\n        })\n        return col2\n      },\n      getColumn3 (values) {\n        let day = values[0].value\n        let hour = values[1].value\n        let col3 = []\n        let minuteArr = this.arrDays[day][hour]\n        minuteArr.forEach(cell => {\n          let text = parseInt(cell) < 10 ? '0' + cell : cell\n          col3.push({\n            value: parseInt(cell),\n            text\n          })\n        })\n        return col3\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n</script>"]}]}